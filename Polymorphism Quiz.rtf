{\rtf1\ansi\ansicpg1252\cocoartf2636
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 HelveticaNeue-Bold;\f1\fnil\fcharset0 HelveticaNeue;\f2\fnil\fcharset0 HelveticaNeue-BoldItalic;
}
{\colortbl;\red255\green255\blue255;\red27\green31\blue35;\red255\green255\blue255;\red13\green80\blue209;
}
{\*\expandedcolortbl;;\cssrgb\c14118\c16078\c18431;\cssrgb\c100000\c100000\c100000;\cssrgb\c3529\c41176\c85490;
}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid1\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat6\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid101\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid2}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}}
\paperw11900\paperh16840\margl1440\margr1440\vieww28600\viewh13680\viewkind0
\deftab720
\pard\pardeftab720\sa320\partightenfactor0

\f0\b\fs64 \cf2 \cb3 \expnd0\expndtw0\kerning0
Polymorphism & Composition Homework - Quiz\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \
\pard\pardeftab720\sa320\partightenfactor0
\cf2 \cb3 Polymorphism\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa320\partightenfactor0
\ls1\ilvl0
\f1\b0\fs32 \cf2 \cb3 \kerning1\expnd0\expndtw0 {\listtext	1	}\expnd0\expndtw0\kerning0
What does the 
\f2\i\b word
\f1\i0\b0  'polymorphism' mean?   It means \'93many\'94 \'93changes\'94 or \'93shapes\'94.\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa320\partightenfactor0
\ls1\ilvl0\cf2 \cb3 \kerning1\expnd0\expndtw0 {\listtext	2	}\expnd0\expndtw0\kerning0
What does it mean when we apply polymorphism to OO design? Give a simple Java example. You could have an abstract class called Person, then make subclasses which are Employee and Manager. The AbstractPerson class has attributes such as name, age, national insurance number. The sub classes can have further attributes and methods that the Abstract class does not. The use of AbstractPerson methods in sub classes such as Employee and Manager is an example of polymorphism.\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa320\partightenfactor0
\ls1\ilvl0\cf2 \cb3 \kerning1\expnd0\expndtw0 {\listtext	3	}\expnd0\expndtw0\kerning0
What can we use to implement polymorphism in Java? Interphase classes such as IExample.\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 {\listtext	4	}\expnd0\expndtw0\kerning0
How many 'forms' can an object take when using polymorphism? Multiple. \cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 {\listtext	5	}\expnd0\expndtw0\kerning0
Give an example of when you could use polymorphism. When you have multiple classes that have a lot of common attributes and methods, you could create an Abstract class which contains all the common attributes and methods.\cb1 \
\pard\pardeftab720\partightenfactor0

\f0\b\fs64 \cf4 \
\pard\pardeftab720\sa320\partightenfactor0
\cf2 \cb3 Composition and Aggregation\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa320\partightenfactor0
\ls2\ilvl0
\f1\b0\fs32 \cf2 \cb3 \kerning1\expnd0\expndtw0 {\listtext	6	}\expnd0\expndtw0\kerning0
What do we mean by 'composition' in reference to object-oriented programming? Composition is when an object is made up of other objects and is highly dependable on those objects.\cb1 \
\ls2\ilvl0\cb3 \kerning1\expnd0\expndtw0 {\listtext	7	}\expnd0\expndtw0\kerning0
When would you use composition? Provide a simple example in Java. When the project is fairly small and doesn\'92t have a lot of subclasses as otherwise the code can get very tangled as the project size increases.\cb1 \
\ls2\ilvl0\cb3 \kerning1\expnd0\expndtw0 {\listtext	8	}\expnd0\expndtw0\kerning0
Give a difference between composition and aggregation? Composition is when an object IS A PART OF another object, without which the said object wouldn\'92t exist. Aggregation is when an object HAS something, like a car having an engine, tyres, and gearbox.\cb1 \
\ls2\ilvl0\cb3 \kerning1\expnd0\expndtw0 {\listtext	9	}\expnd0\expndtw0\kerning0
What is/are the advantage(s) of using composition/aggregation? Composition is better for objects not likely to change whereas aggregation makes it easier to change the properties or update the properties of an object down the line.\cb1 \
\ls2\ilvl0\cb3 \kerning1\expnd0\expndtw0 {\listtext	10	}\expnd0\expndtw0\kerning0
When using composition, when an object is destroyed, what happens to all the objects it is composed of? All objects it is composed of are also destroyed. \cb1 \
\ls2\ilvl0\cb3 \kerning1\expnd0\expndtw0 {\listtext	11	}\expnd0\expndtw0\kerning0
When using aggregation, when an object is destroyed, what happens to all the objects it is composed of? Those objects can remain independently of the object being destroyed.}